@model PagedList.IPagedList<SPlanner.Models.Event>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Event List";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
</p>
@using (Html.BeginForm("Index", "Events", FormMethod.Get))
{
    <p style="font-size:larger">
        Find in Thema or in Description: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" class = "btn btn-default" style="height: 30px; margin-top: -0.2%;" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Start Data", "Index", new { sort = ViewBag.StartDateSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("End Data", "Index", new { sort = ViewBag.EndDateSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Thema", "Index", new { sort = ViewBag.ThemaSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Category
        </th>
        <th>
            Description
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Thema)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.EventID }) |
                @Html.ActionLink("Details", "Details", new { id = item.EventID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.EventID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0: Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sort = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))